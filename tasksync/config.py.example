# Copyright (C) 2012-2018 Richard Burnison
#
# This file is part of tasksync.
#
# tasksync is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tasksync is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tasksync.  If not, see <http://www.gnu.org/licenses/>.

#pylint: disable=C0103,C0111,W0142
from tasksync.google_tasks import GoogleTaskFactory, GoogleTaskRepository
from tasksync.taskwarrior import TaskWarriorTaskFactory, TaskWarriorTaskRepository

import errno
import httplib2
import os

def __tw2gt_upstream(dtask, utask):
    """
    Allows for pre-sync modifications. A negative return indicates
    that the task should not be synced.
    """
    if utask.list_name is None:
        utask.list_name = '@default'

def __tw2gt_downstream(utask, dtask):
    """
    Allows for pre-sync modifications. A negative return indicates
    that the task should not be synced. You may use this to map UDA
    types.
    """
    pass

def __tasksync_d():
    home = os.path.join(os.environ['HOME'], '.tasksync')
    try:
        os.makedirs(home)
    except OSError as e:
        if e.errno != errno.EEXIST:
            raise
    return home


def executions(args):
    __google_task_factory = GoogleTaskFactory()
    __google_task_repository = GoogleTaskRepository(
        __google_task_factory,
        args,
        credential_storage=os.path.join(__tasksync_d(), 'google.oauth'),
        client_id=os.environ['CLIENT_ID'],
        client_secret=os.environ['CLIENT_SECRET'],
        task_list_filter=lambda name: True
    )

    __tw_task_factory = TaskWarriorTaskFactory()
    __tw_task_repository = TaskWarriorTaskRepository(
        __tw_task_factory,
        config=os.path.join(os.environ['HOME'], '.taskrc')
    )


    return {
        # Task Warrior to Google Tasks
        'tw2gt':{
            'upstream':{
                'factory': __google_task_factory,
                'repository': __google_task_repository,
                'filter': None,
                'cb': __tw2gt_upstream,
                'delete_orphans': True
            },
            'downstream':{
                'factory': __tw_task_factory,
                'repository': __tw_task_repository,
                'filter': None,
                'cb': __tw2gt_downstream,
                'delete_orphans': False
            },
        }
    }
